// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace LifePrint.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using LifePrint;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\_Imports.razor"
using LifePrint.Shared;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/viewresult/{resultId:int}")]
    [Microsoft.AspNetCore.Components.RouteAttribute("/viewresult")]
    public partial class ViewResult : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 390 "C:\Users\hmust\Documents\GitHub\LifePrintGroupA\LifePrint\LifePrint\Pages\ViewResult.razor"
       
    [Parameter]
    public int resultId { get; set; }
    public int? hresult;
    public double? hperc;
    public double? HGhperc;
    public double? HEwperc;
    public double? HEfperc;
    public int? bresult;
    public int? sresult;
    public int? wresult;
    public int? vresult;
    public string potential;
    public string ghpotential;
    public string efpotential;
    public string ewpotential;

    public string hstatus;
    public string hstatuscolor;
    public string bstatus;
    public string bstatuscolor;
    public string sstatus;
    public string sstatuscolor;
    public string wstatus;
    public string wstatuscolor;
    public string vstatus;
    public string vstatuscolor;
    public string hpstatus;
    public string hpstatuscolor;

    /*public List<int?> hresult = new List<int?>();
    public List<int?> sresult = new List<int?>();
    public List<int?> bresult = new List<int?>();
    public List<int?> wresult = new List<int?>();
    public List<int?> vresult = new List<int?>();
    public List<double?> hperc = new List<double?>();*/

    public string hscore;
    public string sscore;
    public string bscore;
    public string wscore;
    public string vscore;
    public string hpercent;
    public string HGhpercent;
    public string HEwpercent;
    public string HEfpercent;
    public string HGhpstatus;
    public string HGhpstatuscolor;
    public string HEwpstatus;
    public string HEwpstatuscolor;
    public string HEfpstatus;
    public string HEfpstatuscolor;
    protected override Task OnInitializedAsync()
    {
        GetUserScore();
        return Task.CompletedTask;
    }

    public void GetUserScore()
    {
        using var db = new LifeprintDatabaseContext();
        var healthResult = db.Results.Where(r => r.ResultId == resultId).ToList()[0].HealthId;
        var hRes = db.Health.Where(h => h.HealthId == healthResult).ToList()[0];
        var beingResult = db.Results.Where(r => r.ResultId == resultId).ToList()[0].BeingId;
        var bRes = db.Being.Where(b => b.BeingId == beingResult).ToList()[0];
        var socialResult = db.Results.Where(r => r.ResultId == resultId).ToList()[0].SocialId;
        var sRes = db.Social.Where(s => s.SocialId == socialResult).ToList()[0];
        var wealthResult = db.Results.Where(r => r.ResultId == resultId).ToList()[0].WealthId;
        var wRes = db.Wealth.Where(w => w.WealthId == wealthResult).ToList()[0];
        var vocationResult = db.Results.Where(r => r.ResultId == resultId).ToList()[0].VocationId;
        var vRes = db.Vocation.Where(v => v.VocationId == vocationResult).ToList()[0];

        hresult = hRes.HGhTotScore + /*hRes.HHvsfTotScore +*/ hRes.HEwTotScore + hRes.HEfTotScore;
        hscore = hresult.ToString();

        hperc = hRes.HPercent2dpScore;
        hpercent = hperc.ToString();

        HGhperc = hRes.HGhPercent2dpScore;
        HGhpercent = HGhperc.ToString();

        /*HHvsfperc = hRes.HHvsfPercent2dpScore;
        HHvsfpercent = HHVsfperc.ToString();*/

        HEwperc = hRes.HEwPercent2dpScore;
        HEwpercent = HEwperc.ToString();

        HEfperc = hRes.HEfPercent2dpScore;
        HEfpercent = HEfperc.ToString();

        potential = (100 - hperc).ToString();
        ghpotential = (100 - HGhperc).ToString();
        efpotential = (100 - HEfperc).ToString();
        ewpotential = (100 - HEwperc).ToString();

        sresult = sRes.S10NScore + sRes.S11CScore + sRes.S12EScore + sRes.S13FmScore + sRes.S14FmScore + sRes.S15FrScore + sRes.S16PScore + sRes.S17RScore + sRes.S18EScore + sRes.S19NScore + sRes.S20CScore + sRes.S2HvsfScore + sRes.S3FmScore + sRes.S4FmScore + sRes.S5FrScore + sRes.S6FrScore + sRes.S7PScore + sRes.S8RScore + sRes.S9NScore;
        sscore = sresult.ToString();

        bresult = bRes.B10IrScore + bRes.B11SaseScore + bRes.B12AsdScore + bRes.B13AsdScore + bRes.B14AsdScore + bRes.B15IrScore + bRes.B16TrScore + bRes.B17SaseScore + bRes.B18TrScore + bRes.B19PcScore + bRes.B20SaScore + bRes.B21PcScore + bRes.B21PcScore + bRes.B22SaScore + bRes.B23PcScore + bRes.B24SaScore + bRes.B25PcScore + bRes.B26SaScore + bRes.B27PcScore + bRes.B28SaScore + bRes.B1SlScore + bRes.B2SlScore + bRes.B3SlScore + bRes.B4EafeScore + bRes.B5AsdScore + bRes.B6TrScore + bRes.B7EafeScore + bRes.B8AsdScore + bRes.B9SaseScore;
        bscore = bresult.ToString();

        wresult = wRes.W1WsCwpScore + wRes.W2WsCwpScore + wRes.W3WsCwpScore + wRes.W4WsCwpScore + wRes.W5CwlScore + wRes.W6CwlScore + wRes.W7CwlScore + wRes.W8FwoCwpScore + wRes.W9FwoCwpScore + wRes.W10FwoCwpScore;
        wscore = wresult.ToString();

        vresult = vRes.V1PPfbexhScore + vRes.V2FlCsbResScore + vRes.V3DMpScore + vRes.V4FlAamScore + vRes.V5IFlTrotScore + vRes.V6PPfbexhScore + vRes.V7DScore + vRes.V8IFlCotahScore + vRes.V9DImScore + vRes.V10PImPfbcynScore + vRes.V11IImScore + vRes.V12FlCgscore + vRes.V13DPfbcynScore + vRes.V14IScore + vRes.V15FlSocScore + vRes.V16PImscore + vRes.V17DFlAamScore + vRes.V18FlUfPfbeffScore + vRes.V19IScore + vRes.V20PResScore + vRes.V21FlAePfbeffScore + vRes.V22IResScore + vRes.V23PResScore + vRes.V24VaFlAeScore + vRes.V25VaFlAeScore + vRes.V26VaFlCgScore + vRes.V27VaPafulPfbeffScore + vRes.V28VaPacapScore + vRes.V29VaOafulScore + vRes.V30VaOatrtEmPfbeffScore + vRes.V31VaPatrtEmScore + vRes.V32VaOacapRscEmPfbrscScore + vRes.V33VaOatrtPfbcynScore + vRes.V34VaPatrtEmPfbcynScore + vRes.V35VaOacapDmdPfbdmdScore;
        vscore = vresult.ToString();

        if (HEfperc < 39)
        {
            HEfpstatus = "CRITICAL";
            HEfpstatuscolor = "redbg";
        }
        if (HEfperc > 39 && HEfperc < 69)
        {
            HEfpstatus = "PRIORITY";
            HEfpstatuscolor = "orangebg";
        }
        if (HEfperc > 69 && HEfperc < 85)
        {
            HEfpstatus = "ATTENTION";
            HEfpstatuscolor = "yellowbg";
        }
        if (HEfperc > 85 && HEfperc < 100)
        {
            HEwpstatus = "OPTIMAL";
            HEfpstatuscolor = "greenbg";
        }

        if (HEwperc < 39)
        {
            HEwpstatus = "CRITICAL";
            HEwpstatuscolor = "redbg";
        }
        if (HEwperc > 39 && HEwperc < 69)
        {
            HEwpstatus = "PRIORITY";
            HEwpstatuscolor = "orangebg";
        }
        if (HEwperc > 69 && HEwperc < 85)
        {
            HEwpstatus = "ATTENTION";
            HEwpstatuscolor = "yellowbg";
        }
        if (HEwperc > 85 && HEwperc < 100)
        {
            HEwpstatus = "OPTIMAL";
            HEwpstatuscolor = "greenbg";
        }

        if (HGhperc < 39)
        {
            hpstatus = "CRITICAL";
            hpstatuscolor = "redbg";
        }
        if (HGhperc > 39 && HGhperc < 69)
        {
            hpstatus = "PRIORITY";
            hpstatuscolor = "orangebg";
        }
        if (HGhperc > 69 && HGhperc < 85)
        {
            hpstatus = "ATTENTION";
            hpstatuscolor = "yellowbg";
        }
        if (HGhperc > 85 && HGhperc < 100)
        {
            hpstatus = "OPTIMAL";
            hpstatuscolor = "greenbg";
        }

        if (hperc < 39)
        {
            HGhpstatus = "CRITICAL";
            HGhpstatuscolor = "redbg";
        }
        if (hperc > 39 && hperc < 69)
        {
            HGhpstatus = "PRIORITY";
            HGhpstatuscolor = "orangebg";
        }
        if (hperc > 69 && hperc < 85)
        {
            HGhpstatus = "ATTENTION";
            HGhpstatuscolor = "yellowbg";
        }
        if (hperc > 85 && hperc < 100)
        {
            HGhpstatus = "OPTIMAL";
            HGhpstatuscolor = "greenbg";
        }

        if (hresult < 39)
        {
            hstatus = "CRITICAL";
            hstatuscolor = "redbg";
        }
        if (hresult > 39 && hresult < 69)
        {
            hstatus = "PRIORITY";
            hstatuscolor = "orangebg";
        }
        if (hresult > 69 && hresult < 85)
        {
            hstatus = "ATTENTION";
            hstatuscolor = "yellowbg";
        }
        if (hresult > 85 && hresult < 100)
        {
            hstatus = "OPTIMAL";
            hstatuscolor = "greenbg";
        }

        if (bresult < 39)
        {
            bstatus = "CRITICAL";
            bstatuscolor = "redbg";
        }
        if (bresult > 39 && bresult < 69)
        {
            bstatus = "PRIORITY";
            bstatuscolor = "orangebg";
        }
        if (bresult > 69 && bresult < 85)
        {
            bstatus = "ATTENTION";
            bstatuscolor = "yellowbg";
        }
        if (bresult > 85 && bresult < 100)
        {
            bstatus = "OPTIMAL";
            bstatuscolor = "greenbg";
        }

        if (sresult < 39)
        {
            sstatus = "CRITICAL";
            sstatuscolor = "redbg";
        }
        if (sresult > 39 && sresult < 69)
        {
            sstatus = "PRIORITY";
            sstatuscolor = "orangebg";
        }
        if (sresult > 69 && sresult < 85)
        {
            sstatus = "ATTENTION";
            sstatuscolor = "yellowbg";
        }
        if (sresult > 85 && sresult < 100)
        {
            sstatus = "OPTIMAL";
            sstatuscolor = "greenbg";
        }

        if (wresult < 39)
        {
            wstatus = "CRITICAL";
            wstatuscolor = "redbg";
        }
        if (wresult > 39 && wresult < 69)
        {
            wstatus = "PRIORITY";
            wstatuscolor = "orangebg";
        }
        if (wresult > 69 && wresult < 85)
        {
            wstatus = "ATTENTION";
            wstatuscolor = "yellowbg";
        }
        if (wresult > 85 && wresult < 100)
        {
            wstatus = "OPTIMAL";
            wstatuscolor = "greenbg";
        }

        if (vresult < 39)
        {
            vstatus = "CRITICAL";
            vstatuscolor = "redbg";
        }
        if (vresult > 39 && vresult < 69)
        {
            vstatus = "PRIORITY";
            vstatuscolor = "orangebg";
        }
        if (vresult > 69 && vresult < 85)
        {
            vstatus = "ATTENTION";
            vstatuscolor = "yellowbg";
        }
        if (vresult > 85 && vresult < 100)
        {
            vstatus = "OPTIMAL";
            vstatuscolor = "greenbg";
        }
        /*
        hresult = hRes.Select(a => a.HGhTotScore + a.HHvsfTotScore + a.HEfTotScore + a.HEwTotScore).ToList();
        hscore = hresult[0].ToString();

        hperc = hRes.Select(a => a.HPercent2dpScore).ToList();
        hpercent = hpercent.ToString();


        sresult = sRes.Select(a => a.S10NScore + a.S11CScore + a.S12EScore + a.S13FmScore + a.S14FmScore + a.S15FrScore + a.S16PScore + a.S17RScore + a.S18EScore + a.S19NScore + a.S20CScore + a.S2HvsfScore + a.S3FmScore + a.S4FmScore + a.S5FrScore + a.S6FrScore + a.S7PScore + a.S8RScore + a.S9NScore).ToList();
        sscore = sresult[resultId].ToString();


        bresult = bRes.Select(a => a.B10IrScore + a.B11SaseScore + a.B12AsdScore + a.B13AsdScore + a.B14AsdScore + a.B15IrScore + a.B16TrScore + a.B17SaseScore + a.B18TrScore + a.B19PcScore + a.B20SaScore + a.B21PcScore + a.B21PcScore + a.B22SaScore + a.B23PcScore + a.B24SaScore + a.B25PcScore + a.B26SaScore + a.B27PcScore + a.B28SaScore + a.B1SlScore + a.B2SlScore + a.B3SlScore + a.B4EafeScore + a.B5AsdScore + a.B6TrScore + a.B7EafeScore + a.B8AsdScore + a.B9SaseScore).ToList();
        bscore = bresult[resultId].ToString();

        wresult = wRes.Select(a => a.W1WsCwpScore + a.W2WsCwpScore + a.W3WsCwpScore + a.W4WsCwpScore + a.W5CwlScore + a.W6CwlScore + a.W7CwlScore + a.W8FwoCwpScore + a.W9FwoCwpScore + a.W10FwoCwpScore).ToList();
        wscore = wresult[resultId].ToString();

        vresult = vRes.Select(a => a.V1PPfbexhScore + a.V2FlCsbResScore + a.V3DMpScore + a.V4FlAamScore + a.V5IFlTrotScore + a.V6PPfbexhScore + a.V7DScore + a.V8IFlCotahScore + a.V9DImScore + a.V10PImPfbcynScore + a.V11IImScore + a.V12FlCgscore + a.V13DPfbcynScore + a.V14IScore + a.V15FlSocScore + a.V16PImscore + a.V17DFlAamScore + a.V18FlUfPfbeffScore + a.V19IScore + a.V20PResScore + a.V21FlAePfbeffScore + a.V22IResScore + a.V23PResScore + a.V24VaFlAeScore + a.V25VaFlAeScore + a.V26VaFlCgScore + a.V27VaPafulPfbeffScore + a.V28VaPacapScore + a.V29VaOafulScore + a.V30VaOatrtEmPfbeffScore + a.V31VaPatrtEmScore + a.V32VaOacapRscEmPfbrscScore + a.V33VaOatrtPfbcynScore + a.V34VaPatrtEmPfbcynScore + a.V35VaOacapDmdPfbdmdScore).ToList();
        vscore = vresult[resultId].ToString();
        */


    }


#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
